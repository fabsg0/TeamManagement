@using Web.TeamManagement.Blazor.ToastMessage
@inject ToastService ToastService
@inject ILogger<Toast> Logger

@if (ShowMessage)
{
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 1100;">
        <div class="toast show align-items-center text-white @MessageTypeClass border-0" role="alert">
            <div class="d-flex">
                <div class="toast-body">
                    @MessageContent
                </div>
            </div>
        </div>
    </div>
}

@code {
    private bool ShowMessage { get; set; }
    private string MessageContent { get; set; } = string.Empty;
    private string MessageType { get; set; } = "success";
    private int DismissAfter { get; set; } = 5;

    private string MessageTypeClass => MessageType switch
    {
        "success" => "bg-success",
        "failure" or "error" => "bg-danger",
        "alert" or "info" => "bg-info",
        "warning" => "bg-warning text-dark",
        _ => "bg-secondary"
    };

    protected override async Task OnParametersSetAsync()
    {
        if (ShowMessage && DismissAfter > 0)
        {
            await Task.Delay(DismissAfter * 1000);
            HideMessage();
        }
    }

    protected override void OnInitialized()
    {
        ToastService.OnShow += ShowToast;
        ToastService.OnHide += HideMessage;
    }

    private async void ShowToast(string message, string type, int dismissAfter)
    {
        try
        {
            MessageContent = message;
            MessageType = type;
            ShowMessage = true;

            await InvokeAsync(StateHasChanged);

            if (dismissAfter <= 0) return;
            await Task.Delay(dismissAfter * 1000);
            HideMessage();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "");
        }
    }

    private void HideMessage()
    {
        ShowMessage = false;
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ToastService.OnShow -= ShowToast;
        ToastService.OnHide -= HideMessage;
    }

}